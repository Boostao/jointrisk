on:
  push:
    branches: [master, main]
    paths:
    - 'DESCRIPTION'
    - 'README.md'
    - '_pkgdown.yml'
    - 'pkgdown/**'
    - 'vignettes/**'
    - 'man/**'
  pull_request:
    branches: [master, main]
    paths-ignore:
    - '.github/**'
  repository_dispatch:
    types: [pkgdown_trigger]

name: pkgdown

jobs:
  pkgdown:
    name: Build site + re-push
    runs-on: ubuntu-20.04
    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: 'https://packagemanager.rstudio.com/cran/__linux__/focal/latest'
      GITHUB_PAT: ${{ secrets.GH_PAT }}
      R_RENV_CACHE_DIR: '~/.local/share/renv'
    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@v1

      - uses: r-lib/actions/setup-pandoc@v1

      - name: Query dependencies
        shell: Rscript {0}
        run: |
          install.packages("remotes")
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")

      - name: Cache R packages
        uses: actions/cache@v2
        with:
          path: |
            ${{ env.R_LIBS_USER }}
            ${{ env.R_RENV_CACHE_DIR }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: Install system dependencies
        if: runner.os == 'Linux'
        env:
          RHUB_PLATFORM: linux-x86_64-ubuntu-gcc
        run: |
          Rscript -e "remotes::install_github('meztez/sysreqs')"
          sysreqs=$(Rscript -e "cat(sysreqs::sysreq_commands('DESCRIPTION', remotes = TRUE, pkgs = 'pkgdown'))")
          sudo -s eval "$sysreqs"

      - name: Install dependencies
        run: |
          if (file.exists("renv.lock")) {
            if (!requireNamespace("renv", quietly = TRUE)) install.packages("renv")
            renv::restore()
          } else {
            remotes::install_deps(dependencies = TRUE)
          }
          # Recompiling stringi
          remotes::install_cran("stringi", force = TRUE)
          remotes::install_cran("pkgdown")
        shell: Rscript {0}

      - name: Install package
        run: R CMD INSTALL .

      - name: Build Site (PR)
        if: github.event_name == 'pull_request'
        shell: Rscript {0}
        run: |
          pkgdown::build_site(new_process = FALSE)
      # Must validate after. Otherwise files are saved and `pkgdown::build_site()` gets mad
      - name: Validate all topics exist (PR)
        if: github.event_name == 'pull_request'
        shell: Rscript {0}
        run: |
          pkgdown::build_reference_index()
          stopifnot(length(warnings()) == 0)
      - name: Git Config
        if: github.event_name != 'pull_request'
        run: |
          git config --local user.email "${GITHUB_ACTOR}@users.noreply.github.com" && \
            git config --local user.name "${GITHUB_ACTOR}"
      - name: Build and Deploy Site
        if: github.event_name != 'pull_request'
        shell: Rscript {0}
        run: |
          pkgdown::deploy_to_branch(branch="pkgdocs", new_process = FALSE)
      - name: Dispatch to Minicran
        if: github.event_name != 'pull_request'
        run: |
          curl \
            -X POST -f \
            -H "Authorization:token ${{ secrets.GH_PAT }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/LaCapitale/dsops-r-minicran/dispatches \
            -d '{"event_type":"pkgdown_trigger", "client_payload": {"repository":"'"$GITHUB_REPOSITORY"'", "ref":"pkgdocs"}}'

